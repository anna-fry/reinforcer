// Code generated by reinforcer, DO NOT EDIT.

package reinforced

import "context"

type targetSomeOtherClient interface {
	DoStuff() error
}
type SomeOtherClient struct {
	*base
	delegate targetSomeOtherClient
}

func NewSomeOtherClient(delegate targetSomeOtherClient, runnerFactory runnerFactory, options ...Option) *SomeOtherClient {
	if delegate == nil {
		panic("provided nil delegate")
	}
	if runnerFactory == nil {
		panic("provided nil runner factory")
	}
	c := &SomeOtherClient{
		base: &base{
			errorPredicate: RetryAllErrors,
			runnerFactory:  runnerFactory,
		},
		delegate: delegate,
	}
	for _, o := range options {
		o(c.base)
	}
	return c
}
func (s *SomeOtherClient) DoStuff() error {
	var nonRetryableErr error
	err := s.run(context.Background(), SomeOtherClientMethods.DoStuff, func(_ context.Context) error {
		var err error
		err = s.delegate.DoStuff()
		if s.errorPredicate(SomeOtherClientMethods.DoStuff, err) {
			return err
		}
		nonRetryableErr = err
		return nil
	})
	if nonRetryableErr != nil {
		return nonRetryableErr
	}
	return err
}
